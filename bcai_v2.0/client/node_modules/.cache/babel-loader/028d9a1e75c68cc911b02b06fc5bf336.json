{"ast":null,"code":"import _regeneratorRuntime from \"/home/taurus/blockchain/gitLab/ipfsLab/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/taurus/blockchain/gitLab/ipfsLab/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/taurus/blockchain/gitLab/ipfsLab/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/taurus/blockchain/gitLab/ipfsLab/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/taurus/blockchain/gitLab/ipfsLab/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/taurus/blockchain/gitLab/ipfsLab/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/taurus/blockchain/gitLab/ipfsLab/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/taurus/blockchain/gitLab/ipfsLab/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/taurus/blockchain/gitLab/ipfsLab/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport SimpleStorageContract from \"./contracts/SimpleStorage.json\";\nimport getWeb3 from \"./utils/getWeb3\";\nimport truffleContract from \"truffle-contract\";\nimport ipfs from './ipfs';\nimport \"./App.css\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      storageValue: 0,\n      web3: null,\n      accounts: null,\n      contract: null\n    };\n    _this.componentDidMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var web3, accounts, Contract, instance;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return getWeb3();\n\n            case 3:\n              web3 = _context.sent;\n              _context.next = 6;\n              return web3.eth.getAccounts();\n\n            case 6:\n              accounts = _context.sent;\n              // Get the contract instance.\n              Contract = truffleContract(SimpleStorageContract);\n              Contract.setProvider(web3.currentProvider);\n              _context.next = 11;\n              return Contract.deployed();\n\n            case 11:\n              instance = _context.sent;\n\n              // Set web3, accounts, and contract to the state, and then proceed with an\n              // example of interacting with the contract's methods.\n              _this.setState({\n                web3: web3,\n                accounts: accounts,\n                contract: instance\n              }, _this.runExample);\n\n              _context.next = 19;\n              break;\n\n            case 15:\n              _context.prev = 15;\n              _context.t0 = _context[\"catch\"](0);\n              // Catch any errors for any of the above operations.\n              alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n              console.log(_context.t0);\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[0, 15]]);\n    }));\n    _this.runExample =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var _this$state, accounts, contract, response;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this$state = _this.state, accounts = _this$state.accounts, contract = _this$state.contract; // Stores a given value, 5 by default.\n\n              _context2.next = 3;\n              return contract.set(1721241, {\n                from: accounts[2]\n              });\n\n            case 3:\n              _context2.next = 5;\n              return contract.get();\n\n            case 5:\n              response = _context2.sent;\n\n              // Update state with the result.\n              _this.setState({\n                storageValue: response.toNumber()\n              });\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n    _this.state = {\n      storageValue: 0,\n      web3: null\n    };\n    _this.captureFile = _this.captureFile.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"captureFile\",\n    value: function captureFile() {\n      console.log(\"capture file\");\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(event) {\n      event.preventDefault();\n      console.log(\"submitted!\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.state.web3) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, \"Loading Web3, accounts, and contract...\");\n      }\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Your Image\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Your image is saved on IPFS and Ethereum blockchain\"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Upload Image\"), React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.captureFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"If your contracts compiled and migrated successfully, below will show a stored value of 5 (by default).\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Try changing the value stored on \", React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"line 40\"), \" of App.js.\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"The stored value is: \", this.state.storageValue));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/taurus/blockchain/gitLab/ipfsLab/client/src/App.js"],"names":["React","Component","SimpleStorageContract","getWeb3","truffleContract","ipfs","App","props","state","storageValue","web3","accounts","contract","componentDidMount","eth","getAccounts","Contract","setProvider","currentProvider","deployed","instance","setState","runExample","alert","console","log","set","from","get","response","toNumber","captureFile","bind","onSubmit","event","preventDefault"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport SimpleStorageContract from \"./contracts/SimpleStorage.json\";\nimport getWeb3 from \"./utils/getWeb3\";\nimport truffleContract from \"truffle-contract\";\nimport ipfs from './ipfs';\n\nimport \"./App.css\";\n\nclass App extends Component {\n  state = { storageValue: 0, web3: null, accounts: null, contract: null };\n  constructor(props){\n    super(props)\n    this.state = {storageValue: 0, web3: null}\n\n    this.captureFile = this.captureFile.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n\n  componentDidMount = async () => {\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n\n      // Get the contract instance.\n      const Contract = truffleContract(SimpleStorageContract);\n      Contract.setProvider(web3.currentProvider);\n      const instance = await Contract.deployed();\n\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n      this.setState({ web3, accounts, contract: instance }, this.runExample);\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`\n      );\n      console.log(error);\n    }\n  };\n\n  runExample = async () => {\n    const { accounts, contract } = this.state;\n\n    // Stores a given value, 5 by default.\n    await contract.set(1721241, { from: accounts[2] });\n\n    // Get the value from the contract to prove it worked.\n    const response = await contract.get();\n\n    // Update state with the result.\n    this.setState({ storageValue: response.toNumber() });\n  };\n\n  captureFile(){\n    console.log(\"capture file\")\n  }\n\n  onSubmit(event){\n    event.preventDefault();\n    console.log(\"submitted!\")\n  }  \n\n\n\n\n  render() {\n    if (!this.state.web3) {\n      return <div>Loading Web3, accounts, and contract...</div>;\n    }\n    return (\n      <div className=\"App\">\n        <h1>Your Image</h1>\n        <p>Your image is saved on IPFS and Ethereum blockchain</p>\n        \n        <h2>Upload Image</h2>\n        <form  onSubmit = {this.onSubmit}></form>\n          <input type = 'file' onChange = {this.captureFile}></input>\n          <input type = 'submit' ></input>\n        <p>\n          If your contracts compiled and migrated successfully, below will show\n          a stored value of 5 (by default).\n        </p>\n        <p>\n          Try changing the value stored on <strong>line 40</strong> of App.js.\n        </p>\n        <div>The stored value is: {this.state.storageValue}</div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}