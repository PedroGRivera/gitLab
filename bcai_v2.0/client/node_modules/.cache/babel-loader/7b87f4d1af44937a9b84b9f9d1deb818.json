{"ast":null,"code":"import _regeneratorRuntime from \"/home/taurus/blockchain/gitLab/bcai_v2.0/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/taurus/blockchain/gitLab/bcai_v2.0/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/taurus/blockchain/gitLab/bcai_v2.0/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/taurus/blockchain/gitLab/bcai_v2.0/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/taurus/blockchain/gitLab/bcai_v2.0/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/taurus/blockchain/gitLab/bcai_v2.0/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/taurus/blockchain/gitLab/bcai_v2.0/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/taurus/blockchain/gitLab/bcai_v2.0/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/taurus/blockchain/gitLab/bcai_v2.0/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport TaskContract from \"./contracts/TaskContract.json\";\nimport getWeb3 from \"./utils/getWeb3\";\nimport truffleContract from \"truffle-contract\";\nimport ipfs from './ipfs';\nimport \"./App.css\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      web3: null,\n      accounts: null,\n      myContract: null\n    };\n    _this.componentWillMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var web3, accounts, Contract, instance;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return getWeb3();\n\n            case 3:\n              web3 = _context.sent;\n              _context.next = 6;\n              return web3.eth.getAccounts();\n\n            case 6:\n              accounts = _context.sent;\n              //console.log(accounts);\n              // Get the contract instance.\n              Contract = truffleContract(TaskContract);\n              Contract.setProvider(web3.currentProvider);\n              _context.next = 11;\n              return Contract.deployed();\n\n            case 11:\n              instance = _context.sent;\n\n              //console.log(instance);\n              // Set web3, accounts, and contract to the state, and then proceed with an\n              // example of interacting with the contract's methods.\n              _this.setState({\n                web3: web3,\n                accounts: accounts,\n                myContract: instance\n              }, function () {\n                console.log(\"contract setted up!\");\n              });\n\n              _context.next = 19;\n              break;\n\n            case 15:\n              _context.prev = 15;\n              _context.t0 = _context[\"catch\"](0);\n              // Catch any errors for any of the above operations.\n              alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n              console.log(_context.t0);\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[0, 15]]);\n    }));\n    _this.state = {};\n    _this.captureFile = _this.captureFile.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.showPools = _this.showPools.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"captureFile\",\n    // runExample = async () => {\n    //   const { accounts, contract } = this.state;\n    //   // Stores a given value, 5 by default.\n    //   await contract.set(1721241, { from: accounts[2] });\n    //   // Get the value from the contract to prove it worked.\n    //   const response = await contract.get();\n    //   // Update state with the result.\n    //   this.setState({ storageValue: response.toNumber() });\n    // };\n    //file readers: https://developer.mozilla.org/en-US/docs/Web/API/FileReader\n    value: function captureFile(event) {\n      var _this2 = this;\n\n      console.log(\"capture file\");\n      event.preventDefault();\n      var file = event.target.files[0];\n      var reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = function () {\n        _this2.setState({\n          buffer: Buffer(reader.result)\n        });\n\n        console.log(\"buffer\", _this2.state.buffer);\n      };\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(event) {\n      var _this3 = this;\n\n      console.log(\"submitted!\");\n      event.preventDefault();\n      ipfs.files.add(this.state.buffer, function (err, result) {\n        if (err) {\n          console.log(\"Error!\", err);\n          return;\n        } else {\n          //this.setState({ipfsHash: result[0].hash})\n          console.log(\"ipfsHash returned\", result[0].hash);\n          return _this3.state.contract.set(result[0].hash, {\n            from: _this3.state.accounts[0]\n          }).then(function (res) {\n            console.log(\"Send\", res);\n            return _this3.state.contract.get.call({\n              from: _this3.state.accounts[0]\n            }).then(function (ipfsHash) {\n              console.log(\"Fetched\", ipfsHash);\n\n              _this3.setState({\n                ipfsHash: ipfsHash\n              });\n            });\n          });\n        }\n      });\n    }\n  }, {\n    key: \"showPools\",\n    value: function showPools() {\n      //optional [--list] \n      //NOTE: the following 'return' is important, it actually return the promise object\n      //this avoid the issue of unhandled promise.\n      return this.myContract.methods.getProviderPool().call().then(function (provPool) {\n        console.log(\"=======================================================\");\n        console.log(\"Active provider pool: Total = \", provPool.length);\n        console.log(provPool);\n        return provPool;\n      }).then(function (provPool) {\n        if (argv['list'] && provPool.length > 0) return ListoutPool(provPool, 'provider');\n      }).then(function () {\n        return myContract.methods.getRequestPool().call().then(function (reqPool) {\n          console.log(\"=======================================================\");\n          console.log(\"Pending pool:  Total = \", reqPool.length);\n          console.log(reqPool);\n          return reqPool;\n        });\n      }).then(function (reqPool) {\n        if (argv['list'] && reqPool.length > 0) return ListoutPool(reqPool, 'request');\n      }).then(function () {\n        return myContract.methods.getProvidingPool().call().then(function (providingPool) {\n          console.log(\"=======================================================\");\n          console.log(\"Providing pool:  Total = \", providingPool.length);\n          console.log(providingPool);\n          return providingPool;\n        });\n      }).then(function (providingPool) {\n        if (argv['list'] && providingPool.length > 0) return ListoutPool(providingPool, 'request');\n      }).then(function () {\n        return myContract.methods.getValidatingPool().call().then(function (valiPool) {\n          console.log(\"=======================================================\");\n          console.log(\"Validating pool:  Total = \", valiPool.length);\n          console.log(valiPool);\n          return valiPool;\n        });\n      }).then(function (valiPool) {\n        if (argv['list'] && valiPool.length > 0) return ListoutPool(valiPoolPool, 'request');\n      }).catch(function (err) {\n        console.log(\"Error: show pool error! \", err);\n      });\n    } //components of react: https://reactjs.org/docs/forms.html\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.state.web3) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }, \"Loading Web3, accounts, and contract...\");\n      }\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"Your Mode: User\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"You can change mode later.\"), React.createElement(\"img\", {\n        src: \"https://ipfs.infura.io/ipfs/\".concat(this.state.ipfsHash),\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"Upload Task Script\"), React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.captureFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Click\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \"Your account: \", this.state.accounts[0]), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/taurus/blockchain/gitLab/bcai_v2.0/client/src/App.js"],"names":["React","Component","TaskContract","getWeb3","truffleContract","ipfs","App","props","state","web3","accounts","myContract","componentWillMount","eth","getAccounts","Contract","setProvider","currentProvider","deployed","instance","setState","console","log","alert","captureFile","bind","onSubmit","showPools","event","preventDefault","file","target","files","reader","window","FileReader","readAsArrayBuffer","onloadend","buffer","Buffer","result","add","err","hash","contract","set","from","then","res","get","call","ipfsHash","methods","getProviderPool","provPool","length","argv","ListoutPool","getRequestPool","reqPool","getProvidingPool","providingPool","getValidatingPool","valiPool","valiPoolPool","catch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport TaskContract from \"./contracts/TaskContract.json\";\nimport getWeb3 from \"./utils/getWeb3\";\nimport truffleContract from \"truffle-contract\";\nimport ipfs from './ipfs';\n\nimport \"./App.css\";\n\nclass App extends Component {\n  state = { \n    web3: null, \n    accounts: null, \n    myContract: null };\n\n\n  constructor(props){\n    super(props)\n    this.state = {};\n    this.captureFile = this.captureFile.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.showPools = this.showPools.bind(this)\n  }\n\n\n  componentWillMount = async () => {\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n      //console.log(web3);\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n      //console.log(accounts);\n      // Get the contract instance.\n      const Contract = truffleContract(TaskContract);\n      Contract.setProvider(web3.currentProvider);\n      const instance = await Contract.deployed();\n      //console.log(instance);\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n      this.setState({ web3, accounts, myContract: instance }, function(){\n        console.log(\"contract setted up!\");\n      });\n    }\n    catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`\n      );\n      console.log(error);\n    }\n  };\n\n  // runExample = async () => {\n  //   const { accounts, contract } = this.state;\n\n  //   // Stores a given value, 5 by default.\n  //   await contract.set(1721241, { from: accounts[2] });\n\n  //   // Get the value from the contract to prove it worked.\n  //   const response = await contract.get();\n\n  //   // Update state with the result.\n  //   this.setState({ storageValue: response.toNumber() });\n  // };\n\n  //file readers: https://developer.mozilla.org/en-US/docs/Web/API/FileReader\n\n\n  captureFile(event){\n    console.log(\"capture file\");\n    event.preventDefault()\n    const file = event.target.files[0]\n    const reader = new window.FileReader()\n    reader.readAsArrayBuffer(file)\n    reader.onloadend = () =>{\n      this.setState({buffer: Buffer(reader.result)})\n      console.log(\"buffer\", this.state.buffer);\n    }\n  }\n\n  onSubmit(event){\n    console.log(\"submitted!\")\n    event.preventDefault();\n    ipfs.files.add(this.state.buffer, (err, result)=>{\n      if(err){\n        console.log(\"Error!\", err);\n        return\n      }\n      else{\n        \n        //this.setState({ipfsHash: result[0].hash})\n        console.log(\"ipfsHash returned\", result[0].hash)\n        return this.state.contract.set(result[0].hash, {from: this.state.accounts[0]}).then((res)=>{\n          console.log(\"Send\", res);\n          return this.state.contract.get.call({from: this.state.accounts[0]}).then((ipfsHash)=>{\n            console.log(\"Fetched\", ipfsHash);\n            this.setState({ipfsHash})\n            \n          })\n        })\n      }\n    })\n    \n  }  \n\n  showPools(){\t\t//optional [--list] \n    //NOTE: the following 'return' is important, it actually return the promise object\n    //this avoid the issue of unhandled promise.\n    return this.myContract.methods.getProviderPool().call().then(function(provPool){\n      console.log(\"=======================================================\");\n      console.log(\"Active provider pool: Total = \", provPool.length);\n      console.log(provPool);\n      return provPool;\n    }).then(function(provPool){\n      if(argv['list'] && provPool.length >0) return ListoutPool(provPool,'provider');\n    }).then(function(){\n      return myContract.methods.getRequestPool().call().then(function(reqPool){\n        console.log(\"=======================================================\")\n        console.log(\"Pending pool:  Total = \", reqPool.length);\n        console.log(reqPool);\n        return reqPool;\n      })\n    }).then(function(reqPool){\n      if(argv['list'] && reqPool.length>0) return ListoutPool(reqPool, 'request');\n    }).then(function(){\n      return myContract.methods.getProvidingPool().call().then(function(providingPool){\n        console.log(\"=======================================================\")\n        console.log(\"Providing pool:  Total = \", providingPool.length);\n        console.log(providingPool);\n        return providingPool;\n      })\n    }).then(function(providingPool){\n      if(argv['list'] && providingPool.length>0) return ListoutPool(providingPool, 'request');\n    }).then(function(){\n      return myContract.methods.getValidatingPool().call().then(function(valiPool){\n        console.log(\"=======================================================\")\n        console.log(\"Validating pool:  Total = \", valiPool.length);\n        console.log(valiPool);\n        return valiPool;\n        })\n    }).then(function(valiPool){\n      if(argv['list'] && valiPool.length>0) return ListoutPool(valiPoolPool, 'request');\n    }).catch(function(err){\n      console.log(\"Error: show pool error! \", err);\n    })\n    \n  }\n\n\n  //components of react: https://reactjs.org/docs/forms.html\n\n  render() {\n    if (!this.state.web3) {\n      return <div>Loading Web3, accounts, and contract...</div>;\n    }\n    return (\n      <div className=\"App\">\n        <h1>Your Mode: User</h1>\n        <p>You can change mode later.</p>\n        <img src={`https://ipfs.infura.io/ipfs/${this.state.ipfsHash}`} alt=\"\" />\n        <h2>Upload Task Script</h2>\n        <form  onSubmit = {this.onSubmit}>\n          <input type = 'file' onChange = {this.captureFile}></input>\n          <input type = 'submit' value = \"Click\"></input>\n        </form>\n        \n        <p>\n          Your account: {this.state.accounts[0]}\n        </p>\n        <div></div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}