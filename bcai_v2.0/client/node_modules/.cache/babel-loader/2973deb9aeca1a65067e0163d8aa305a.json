{"ast":null,"code":"import _regeneratorRuntime from \"/home/taurus/blockchain/gitLab/bcai_v2.0/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/taurus/blockchain/gitLab/bcai_v2.0/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/taurus/blockchain/gitLab/bcai_v2.0/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/taurus/blockchain/gitLab/bcai_v2.0/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/taurus/blockchain/gitLab/bcai_v2.0/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/taurus/blockchain/gitLab/bcai_v2.0/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/taurus/blockchain/gitLab/bcai_v2.0/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/taurus/blockchain/gitLab/bcai_v2.0/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/taurus/blockchain/gitLab/bcai_v2.0/client/src/App.js\";\n// \nimport React, { Component } from \"react\";\nimport TaskContract from \"./contracts/TaskContract.json\";\nimport getWeb3 from \"./utils/getWeb3\";\nimport truffleContract from \"truffle-contract\";\nimport ipfs from './ipfs';\nimport \"./App.css\"; //import { userInfo } from \"os\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      web3: null,\n      accounts: null,\n      myAccout: null,\n      myContract: null,\n      debug: false,\n      mode: 1215,\n      providerCount: 0,\n      pendingCount: 0,\n      validatingCount: 0,\n      providingCount: 0,\n      providerList: null,\n      Time: 0,\n      Target: 0,\n      Price: 0,\n      dataID: null\n    };\n    _this.componentWillMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var web3, accounts, Contract, instance;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return getWeb3();\n\n            case 3:\n              web3 = _context.sent;\n              _context.next = 6;\n              return web3.eth.getAccounts();\n\n            case 6:\n              accounts = _context.sent;\n              //console.log(accounts);\n              // Get the contract instance.\n              Contract = truffleContract(TaskContract);\n              Contract.setProvider(web3.currentProvider);\n              _context.next = 11;\n              return Contract.deployed();\n\n            case 11:\n              instance = _context.sent;\n\n              //console.log(instance);\n              // Set web3, accounts, and contract to the state, and then proceed with an\n              // example of interacting with the contract's methods.\n              _this.setState({\n                web3: web3,\n                accounts: accounts,\n                myContract: instance,\n                myAccount: accounts[0]\n              });\n\n              console.log(\"contract setted up!\");\n\n              _this.showPools();\n\n              _context.next = 21;\n              break;\n\n            case 17:\n              _context.prev = 17;\n              _context.t0 = _context[\"catch\"](0);\n              // Catch any errors for any of the above operations.\n              alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n              console.log(_context.t0);\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[0, 17]]);\n    }));\n    _this.state = {\n      mode: \"USER\"\n    };\n    _this.captureFile = _this.captureFile.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.showPools = _this.showPools.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.ListoutPool = _this.ListoutPool.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.DisplayNonZeroInList = _this.DisplayNonZeroInList.bind(_assertThisInitialized(_assertThisInitialized(_this))); //this.setState = this.setState.bind(this).bind(this)\n\n    _this.TimeChange = _this.TimeChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.TargetChange = _this.TargetChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.PriceChange = _this.PriceChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.startRequestSubmit = _this.startRequestSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.changeMode = _this.changeMode.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.changeAccount = _this.changeAccount.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"captureFile\",\n    // runExample = async () => {\n    //   const { accounts, contract } = this.state;\n    //   // Stores a given value, 5 by default.\n    //   await contract.set(1721241, { from: accounts[2] });\n    //   // Get the value from the contract to prove it worked.\n    //   const response = await contract.get();\n    //   // Update state with the result.\n    //   this.setState({ storageValue: response.toNumber() });\n    // };\n    //file readers: https://developer.mozilla.org/en-US/docs/Web/API/FileReader\n    /////// Supporting functions for app //////////////////////////////////////////////////////////////////////////////////////////\n    //NOTE:[important] using => is very important,this pass the context without changing the this ref.\n    //https://medium.com/@thejasonfile/callback-functions-in-react-e822ebede766\n    value: function captureFile(event) {\n      var _this2 = this;\n\n      console.log(\"capture file\");\n      event.preventDefault();\n      var file = event.target.files[0];\n      var reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = function () {\n        _this2.setState({\n          buffer: Buffer(reader.result)\n        });\n\n        console.log(\"buffer\", _this2.state.buffer);\n      };\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(event) {\n      var _this3 = this;\n\n      console.log(\"submitted!\");\n      event.preventDefault();\n      ipfs.files.add(this.state.buffer, function (err, result) {\n        if (err) {\n          console.log(\"Error!\", err);\n          return;\n        } else {\n          //this.setState({ipfsHash: result[0].hash})\n          console.log(\"ipfsHash returned\", result[0].hash);\n\n          _this3.setState({\n            ipfsHash: result[0].hash,\n            dataID: result[0].hash\n          }); // return this.state.myContract.set(result[0].hash, {from: this.state.accounts[0]}).then((res)=>{\n          //   console.log(\"Send\", res);\n          //   return this.state.myContract.get.call({from: this.state.accounts[0]}).then((ipfsHash)=>{\n          //     console.log(\"Fetched\", ipfsHash);\n          //     this.setState({ipfsHash})          \n          //   })\n          // })\n\n        }\n      });\n    }\n  }, {\n    key: \"TimeChange\",\n    value: function TimeChange(event) {\n      event.preventDefault();\n      this.setState({\n        Time: event.target.value\n      });\n    }\n  }, {\n    key: \"TargetChange\",\n    value: function TargetChange(event) {\n      event.preventDefault();\n      this.setState({\n        Target: event.target.value\n      });\n    }\n  }, {\n    key: \"PriceChange\",\n    value: function PriceChange(event) {\n      event.preventDefault();\n      this.setState({\n        Price: event.target.value\n      });\n    }\n  }, {\n    key: \"startRequestSubmit\",\n    value: function startRequestSubmit(event) {\n      var _this4 = this;\n\n      event.preventDefault();\n      console.log(\"maxTime = \", this.state.Time);\n      console.log(\"minTarget = \", this.state.Target);\n      console.log(\"maxPrice = \", this.state.Price);\n      console.log(\"dataID = \", this.state.dataID);\n\n      if (this.state.mode === \"USER\") {\n        ipfs.files.add(this.state.buffer, function (err, result) {\n          if (err) {\n            console.log(\"Error!\", err);\n            return;\n          } else {\n            console.log(\"ipfsHash returned\", result[0].hash);\n\n            _this4.setState({\n              ipfsHash: result[0].hash,\n              dataID: result[0].hash\n            });\n\n            _this4.state.myContract.startRequest(_this4.state.Time, _this4.state.Target, _this4.state.Price, _this4.state.web3.utils.asciiToHex(_this4.state.dataID), {\n              from: _this4.state.myAccount,\n              value: _this4.state.Price\n            }).then(function (ret) {\n              console.log(ret);\n            });\n          }\n        });\n      } else if (this.state.mode === \"WORKER\") {\n        this.state.myContract.startProviding(this.state.Time, this.state.Target, this.state.Price, {\n          from: this.state.myAccount\n        }).then(function (ret) {\n          console.log(ret);\n        });\n      }\n    }\n  }, {\n    key: \"changeMode\",\n    value: function changeMode(event) {\n      event.preventDefault();\n      if (this.state.mode === \"USER\") this.setState({\n        mode: \"WORKER\"\n      });else if (this.state.mode === \"WORKER\") this.setState({\n        mode: \"USER\"\n      });else throw String(\"Setting mode error!\");\n    }\n  }, {\n    key: \"changeAccount\",\n    value: function changeAccount(event) {\n      event.preventDefault();\n      this.setState({\n        myAccount: this.state.accounts[event.target.value]\n      });\n    } ////// Supporting functions for display //////////////////////////////////////////////////////////////////\n\n  }, {\n    key: \"showPools\",\n    value: function showPools() {\n      var _this5 = this;\n\n      //optional [--list] \n      //NOTE: the following 'return' is important, it actually return the promise object\n      //this avoid the issue of unhandled promise.\n      this.state.myContract.getProviderPool.call().then(function (provPool) {\n        console.log(\"=======================================================\");\n        console.log(\"Active provider pool: Total = \", provPool.length);\n        console.log(provPool);\n\n        _this5.setState({\n          providerCount: provPool.length\n        });\n\n        _this5.setState({\n          providerList: provPool\n        });\n\n        return provPool;\n      }).then(function (provPool) {\n        if (provPool.length > 0) return _this5.ListoutPool(provPool, 'provider');\n      });\n      this.state.myContract.getPendingPool.call().then(function (reqPool) {\n        console.log(\"=======================================================\");\n        console.log(\"Pending pool:  Total = \", reqPool.length);\n        console.log(reqPool);\n\n        _this5.setState({\n          pendingCount: reqPool.length\n        });\n\n        return reqPool;\n      }).then(function (reqPool) {\n        if (reqPool.length > 0) return _this5.ListoutPool(reqPool, 'request');\n      });\n      this.state.myContract.getProvidingPool.call().then(function (providingPool) {\n        console.log(\"=======================================================\");\n        console.log(\"Providing pool:  Total = \", providingPool.length);\n        console.log(providingPool);\n\n        _this5.setState({\n          providingCount: providingPool.length\n        });\n\n        return providingPool;\n      }).then(function (providingPool) {\n        if (providingPool.length > 0) return _this5.ListoutPool(providingPool, 'request');\n      }); //.then(function(){\n\n      this.state.myContract.getValidatingPool.call().then(function (valiPool) {\n        console.log(\"=======================================================\");\n        console.log(\"Validating pool:  Total = \", valiPool.length);\n        console.log(valiPool);\n\n        _this5.setState({\n          validatingCount: valiPool.length\n        });\n\n        return valiPool; //})\n      }).then(function (valiPool) {\n        if (valiPool.length > 0) return _this5.ListoutPool(valiPool, 'request');\n      });\n    }\n  }, {\n    key: \"ListoutPool\",\n    value: function ListoutPool(Pool, type) {\n      var _this6 = this;\n\n      //--list [--debug]\n      //console.log(\"List out Pool\")\n      if (type === 'provider') {\n        return this.state.myContract.listProviders.call(Pool).then(function (proList) {\n          console.log(\"-----------------------------------------------------\");\n\n          _this6.DisplayNonZeroInList(proList, 'provider');\n        });\n      } else if (type === 'request') {\n        return this.state.myContract.listRequests.call(Pool).then(function (pendList) {\n          console.log(\"-----------------------------------------------------\");\n\n          _this6.DisplayNonZeroInList(pendList, 'request');\n        });\n      } else throw new Text(\"Not supported type!\");\n    }\n  }, {\n    key: \"DisplayNonZeroInList\",\n    value: function DisplayNonZeroInList(List, type) {\n      if (type === 'request') for (var i = 0; i < List.length; i++) {\n        if (List[i]['addr'] !== 0) {\n          if (this.state.debug) {\n            console.log(List[i]);\n            console.log(\"-----------------------------------------------------\");\n          } else {\n            //simple print:\n            console.log(\"reqID = \", List[i]['reqID']);\n            console.log(\"addr = \", List[i]['addr']);\n            console.log(\"provider = \", List[i]['provider']);\n            console.log(\"status = \", List[i]['status']);\n            console.log(\"-----------------------------------------------------\");\n          }\n        }\n      } else if (type === 'provider') for (var j = 0; j < List.length; j++) {\n        if (List[j]['addr'] !== 0) {\n          if (this.state.debug) {\n            console.log(List[j]);\n            console.log(\"-----------------------------------------------------\");\n          } else {\n            console.log(\"provD = \", List[j]['provID']);\n            console.log(\"addr = \", List[j]['addr']);\n            console.log(\"available = \", List[j]['available']);\n            console.log(\"-----------------------------------------------------\");\n          }\n        }\n      } else throw new Text('Not supported type for display');\n    } /////////////////////////////////////////////////////////////////////////////////\n    //components of react: https://reactjs.org/docs/forms.html  \n\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.state.web3) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 300\n          },\n          __self: this\n        }, \"Loading Web3, accounts, and contract...\");\n      }\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, \"Your Mode: \", this.state.mode), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, \"You can change mode.\"), React.createElement(\"button\", {\n        onClick: this.changeMode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, \"CHANGE MODE\"), React.createElement(\"img\", {\n        src: \"https://ipfs.infura.io/ipfs/\".concat(this.state.ipfsHash),\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, \"Upload Task Script\"), React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.captureFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Upload\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      })), React.createElement(\"form\", {\n        onSubmit: this.startRequestSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, \"Time : (in seconds)\", React.createElement(\"input\", {\n        type: \"number\",\n        value: this.state.Time,\n        onChange: this.TimeChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }))), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, \"Target : (0-100)\", React.createElement(\"input\", {\n        type: \"number\",\n        value: this.state.Target,\n        onChange: this.TargetChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }))), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }, \"Price : (in wei)\", React.createElement(\"input\", {\n        type: \"number\",\n        value: this.state.Price,\n        onChange: this.PriceChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }))), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, \"Use account: \", React.createElement(\"input\", {\n        type: \"number\",\n        value: this.state.count,\n        onChange: this.changeAccount,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }))), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }, \"Your account: \", this.state.myAccount), React.createElement(\"button\", {\n        onClick: this.showPools,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }, \"Refresh\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, \"Active Provider = \", this.state.providerCount), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, \"PendingPool = \", this.state.pendingCount), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, \"Providing Pool = \", this.state.providingCount), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }, \"Validating Pool = \", this.state.validatingCount)));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/taurus/blockchain/gitLab/bcai_v2.0/client/src/App.js"],"names":["React","Component","TaskContract","getWeb3","truffleContract","ipfs","App","props","state","web3","accounts","myAccout","myContract","debug","mode","providerCount","pendingCount","validatingCount","providingCount","providerList","Time","Target","Price","dataID","componentWillMount","eth","getAccounts","Contract","setProvider","currentProvider","deployed","instance","setState","myAccount","console","log","showPools","alert","captureFile","bind","onSubmit","ListoutPool","DisplayNonZeroInList","TimeChange","TargetChange","PriceChange","startRequestSubmit","changeMode","changeAccount","event","preventDefault","file","target","files","reader","window","FileReader","readAsArrayBuffer","onloadend","buffer","Buffer","result","add","err","hash","ipfsHash","value","startRequest","utils","asciiToHex","from","then","ret","startProviding","String","getProviderPool","call","provPool","length","getPendingPool","reqPool","getProvidingPool","providingPool","getValidatingPool","valiPool","Pool","type","listProviders","proList","listRequests","pendList","Text","List","i","j","count"],"mappings":"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","sourcesContent":["// \n\n\nimport React, { Component } from \"react\";\nimport TaskContract from \"./contracts/TaskContract.json\";\nimport getWeb3 from \"./utils/getWeb3\";\nimport truffleContract from \"truffle-contract\";\nimport ipfs from './ipfs';\n\nimport \"./App.css\";\n//import { userInfo } from \"os\";\n\nclass App extends Component {\n  state = { \n    web3: null, \n    accounts: null, \n    myAccout: null,\n    myContract: null ,\n    debug: false,\n    mode : 1215,\n\n    providerCount : 0,\n    pendingCount : 0,\n    validatingCount :0,\n    providingCount:0, \n    providerList: null,\n\n    Time: 0,\n    Target: 0,\n    Price: 0,\n    dataID: null\n  };\n\n\n  constructor(props){\n    super(props)\n    this.state = {\n      mode: \"USER\",\n              };\n    this.captureFile = this.captureFile.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.showPools = this.showPools.bind(this);\n    this.ListoutPool = this.ListoutPool.bind(this);\n    this.DisplayNonZeroInList = this.DisplayNonZeroInList.bind(this);\n    //this.setState = this.setState.bind(this).bind(this)\n    this.TimeChange = this.TimeChange.bind(this);\n    this.TargetChange = this.TargetChange.bind(this);\n    this.PriceChange = this.PriceChange.bind(this);\n    this.startRequestSubmit = this.startRequestSubmit.bind(this);\n    this.changeMode = this.changeMode.bind(this);\n    this.changeAccount = this.changeAccount.bind(this);\n  }\n\n\n  componentWillMount = async () => {\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n      //console.log(web3);\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n      //console.log(accounts);\n      // Get the contract instance.\n      const Contract = truffleContract(TaskContract);\n      Contract.setProvider(web3.currentProvider);\n      const instance = await Contract.deployed();\n      //console.log(instance);\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n      this.setState({ web3, accounts, myContract: instance, myAccount: accounts[0] })\n        console.log(\"contract setted up!\");\n        this.showPools();\n    }\n    catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`\n      );\n      console.log(error);\n    }\n  };\n\n  // runExample = async () => {\n  //   const { accounts, contract } = this.state;\n\n  //   // Stores a given value, 5 by default.\n  //   await contract.set(1721241, { from: accounts[2] });\n\n  //   // Get the value from the contract to prove it worked.\n  //   const response = await contract.get();\n\n  //   // Update state with the result.\n  //   this.setState({ storageValue: response.toNumber() });\n  // };\n\n  //file readers: https://developer.mozilla.org/en-US/docs/Web/API/FileReader\n/////// Supporting functions for app //////////////////////////////////////////////////////////////////////////////////////////\n  //NOTE:[important] using => is very important,this pass the context without changing the this ref.\n  //https://medium.com/@thejasonfile/callback-functions-in-react-e822ebede766\n  captureFile(event){\n    console.log(\"capture file\");\n    event.preventDefault()\n    const file = event.target.files[0]\n    const reader = new window.FileReader()\n    reader.readAsArrayBuffer(file)\n    reader.onloadend = () =>{\n      this.setState({buffer: Buffer(reader.result)})\n      console.log(\"buffer\", this.state.buffer);\n    }\n  }\n\n  onSubmit(event){\n    console.log(\"submitted!\")\n    event.preventDefault();\n    ipfs.files.add(this.state.buffer, (err, result)=>{\n      if(err){\n        console.log(\"Error!\", err);\n        return\n      }\n      else{\n        //this.setState({ipfsHash: result[0].hash})\n        console.log(\"ipfsHash returned\", result[0].hash)\n        this.setState({ipfsHash: result[0].hash, dataID: result[0].hash})\n        // return this.state.myContract.set(result[0].hash, {from: this.state.accounts[0]}).then((res)=>{\n        //   console.log(\"Send\", res);\n        //   return this.state.myContract.get.call({from: this.state.accounts[0]}).then((ipfsHash)=>{\n        //     console.log(\"Fetched\", ipfsHash);\n        //     this.setState({ipfsHash})          \n        //   })\n        // })\n      }\n    })\n    \n  }  \n   \n  TimeChange(event){\n    event.preventDefault();\n    this.setState({Time: event.target.value})\n  }\n  TargetChange(event){\n    event.preventDefault();\n    this.setState({Target: event.target.value})\n  } \n  PriceChange(event){\n    event.preventDefault();\n    this.setState({Price: event.target.value})\n  }\n\n  startRequestSubmit(event){\n    event.preventDefault();\n    console.log(\"maxTime = \", this.state.Time);\n    console.log(\"minTarget = \", this.state.Target);\n    console.log(\"maxPrice = \", this.state.Price);\n    console.log(\"dataID = \", this.state.dataID);\n\n    if(this.state.mode === \"USER\"){\n      ipfs.files.add(this.state.buffer, (err, result)=>{\n        if(err){\n          console.log(\"Error!\", err);\n          return\n        }\n        else{\n          console.log(\"ipfsHash returned\", result[0].hash)\n          this.setState({ipfsHash: result[0].hash, dataID: result[0].hash})\n        \n        this.state.myContract.startRequest(this.state.Time,this.state.Target,\n          this.state.Price, this.state.web3.utils.asciiToHex(this.state.dataID),\n          {from: this.state.myAccount, value: this.state.Price}).then(ret =>{\n            console.log(ret);\n          })\n        }\n      }) \n    }\n    else if(this.state.mode === \"WORKER\"){\n      this.state.myContract.startProviding(this.state.Time, this.state.Target,\n        this.state.Price, {from: this.state.myAccount}).then(ret=>{\n          console.log(ret);\n        })\n    }\n  }\n\n  changeMode(event){\n    event.preventDefault();\n    if(this.state.mode === \"USER\") this.setState({mode: \"WORKER\"})\n    else if(this.state.mode === \"WORKER\") this.setState({mode: \"USER\"})\n    else throw String(\"Setting mode error!\")\n  }\n\n  changeAccount(event){\n    event.preventDefault();\n    this.setState({myAccount: this.state.accounts[event.target.value]})\n  }\n////// Supporting functions for display //////////////////////////////////////////////////////////////////\n  showPools(){\t\t//optional [--list] \n    //NOTE: the following 'return' is important, it actually return the promise object\n    //this avoid the issue of unhandled promise.\n    this.state.myContract.getProviderPool.call().then(provPool =>{\n      console.log(\"=======================================================\");\n      console.log(\"Active provider pool: Total = \", provPool.length);\n      console.log(provPool);\n      this.setState({providerCount: provPool.length})\n      this.setState({providerList: provPool})\n      return provPool; \n     }).then(provPool => {\n       if(provPool.length >0) return this.ListoutPool(provPool,'provider');\n    })\n    \n    \n    this.state.myContract.getPendingPool.call().then(reqPool => {\n        console.log(\"=======================================================\")\n        console.log(\"Pending pool:  Total = \", reqPool.length);\n        console.log(reqPool);\n        this.setState({pendingCount: reqPool.length})\n        return reqPool;\n      \n    }).then(reqPool => {\n       if(reqPool.length>0) return this.ListoutPool(reqPool, 'request');\n    })\n      \n    this.state.myContract.getProvidingPool.call().then(providingPool => {\n        console.log(\"=======================================================\")\n        console.log(\"Providing pool:  Total = \", providingPool.length);\n        console.log(providingPool);\n        this.setState({providingCount: providingPool.length})\n        return providingPool;\n    }).then(providingPool => {\n      if(providingPool.length>0) return this.ListoutPool(providingPool, 'request');\n    })//.then(function(){\n    \n    this.state.myContract.getValidatingPool.call().then(valiPool => {\n        console.log(\"=======================================================\")\n        console.log(\"Validating pool:  Total = \", valiPool.length);\n        console.log(valiPool);\n        this.setState({validatingCount: valiPool.length})\n        return valiPool;\n        //})\n    }).then(valiPool => {\n       if(valiPool.length>0) return this.ListoutPool(valiPool, 'request');\n    })\n  }\n\n  ListoutPool(Pool,type){\t\t//--list [--debug]\n    //console.log(\"List out Pool\")\n    if (type === 'provider'){\n      return this.state.myContract.listProviders.call(Pool)\n      .then(proList => {\n        console.log(\"-----------------------------------------------------\")\n        this.DisplayNonZeroInList(proList,'provider');\n      })\n    }\n    else if (type === 'request'){\n      return this.state.myContract.listRequests.call(Pool)\n      .then(pendList => {\n        console.log(\"-----------------------------------------------------\")\n        this.DisplayNonZeroInList(pendList,'request');\n      })\n    }\n    else throw new Text(\"Not supported type!\")\n  }\n\n  DisplayNonZeroInList(List, type){\n    if(type === 'request')\n      for(var i = 0;i < List.length;i++){\n        if(List[i]['addr'] !== 0){\n          if(this.state.debug){\n            console.log(List[i]);\n            console.log(\"-----------------------------------------------------\")\n          } else {\n            //simple print:\n            console.log(\"reqID = \", List[i]['reqID']);\n            console.log(\"addr = \", List[i]['addr']);\n            console.log(\"provider = \", List[i]['provider']);\n            console.log(\"status = \",  List[i]['status']);\n            console.log(\"-----------------------------------------------------\")\t\t\t\t\t\t\t\n          }\n        }\n      }\n    else if (type === 'provider')\n      for (var j = 0;j < List.length ;j++){\n        if(List[j]['addr'] !== 0){\n          if(this.state.debug){\n            console.log(List[j]);\n            console.log(\"-----------------------------------------------------\")\n          } else{\n            console.log(\"provD = \", List[j]['provID']);\n            console.log(\"addr = \", List[j]['addr']);\n            console.log(\"available = \", List[j]['available']);\n            console.log(\"-----------------------------------------------------\")\n          }\n        }\n      }\n    else throw new Text('Not supported type for display')\t\n  }\n\n  \n/////////////////////////////////////////////////////////////////////////////////\n//components of react: https://reactjs.org/docs/forms.html  \n  render() {\n    if (!this.state.web3) {\n      return <div>Loading Web3, accounts, and contract...</div>;\n    }\n    return (\n      <div className=\"App\">\n        <h1>Your Mode: {this.state.mode}</h1>\n        <p>You can change mode.</p>\n        <button onClick={this.changeMode}>CHANGE MODE</button>\n        <img src={`https://ipfs.infura.io/ipfs/${this.state.ipfsHash}`} alt=\"\" />\n        <h2>Upload Task Script</h2>\n        <form  onSubmit = {this.onSubmit}>\n          <input type = 'file' onChange = {this.captureFile}></input>\n          <input type = 'submit' value = \"Upload\"></input>\n        </form>\n\n        <form onSubmit={this.startRequestSubmit}>\n        <p><label>\n          Time : (in seconds)\n          <input type=\"number\" value={this.state.Time} onChange={this.TimeChange} />\n        </label></p>\n        <p><label>\n          Target : (0-100)\n          <input type=\"number\" value={this.state.Target} onChange={this.TargetChange} />\n        </label></p>\n        <p><label>\n          Price : (in wei)\n          <input type=\"number\" value={this.state.Price} onChange={this.PriceChange} />\n        </label></p>\n        <p>Use account: <input type=\"number\" value={this.state.count} onChange={this.changeAccount}></input> \n        <input type=\"submit\" value=\"Submit\" /></p>\n        \n      </form>\n\n\n\n\n\n        <p>\n          Your account: {this.state.myAccount}\n        </p>\n        <button onClick={this.showPools}>\n          Refresh\n        </button>\n        <div>\n          <p>Active Provider = {this.state.providerCount}</p>\n          <p>PendingPool = {this.state.pendingCount}</p> \n          <p>Providing Pool = {this.state.providingCount}</p>\n          <p>Validating Pool = {this.state.validatingCount}</p>\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}