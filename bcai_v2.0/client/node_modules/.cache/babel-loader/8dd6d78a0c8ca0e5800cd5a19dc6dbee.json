{"ast":null,"code":"import _regeneratorRuntime from \"/home/taurus/blockchain/gitLab/bcai_v2.0/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/taurus/blockchain/gitLab/bcai_v2.0/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/taurus/blockchain/gitLab/bcai_v2.0/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/taurus/blockchain/gitLab/bcai_v2.0/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/taurus/blockchain/gitLab/bcai_v2.0/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/taurus/blockchain/gitLab/bcai_v2.0/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/taurus/blockchain/gitLab/bcai_v2.0/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/taurus/blockchain/gitLab/bcai_v2.0/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/taurus/blockchain/gitLab/bcai_v2.0/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport TaskContract from \"./contracts/TaskContract.json\";\nimport getWeb3 from \"./utils/getWeb3\";\nimport truffleContract from \"truffle-contract\";\nimport ipfs from './ipfs';\nimport \"./App.css\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      web3: null,\n      accounts: null,\n      myContract: null,\n      debug: false\n    };\n    _this.componentWillMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var web3, accounts, Contract, instance;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return getWeb3();\n\n            case 3:\n              web3 = _context.sent;\n              _context.next = 6;\n              return web3.eth.getAccounts();\n\n            case 6:\n              accounts = _context.sent;\n              //console.log(accounts);\n              // Get the contract instance.\n              Contract = truffleContract(TaskContract);\n              Contract.setProvider(web3.currentProvider);\n              _context.next = 11;\n              return Contract.deployed();\n\n            case 11:\n              instance = _context.sent;\n\n              //console.log(instance);\n              // Set web3, accounts, and contract to the state, and then proceed with an\n              // example of interacting with the contract's methods.\n              _this.setState({\n                web3: web3,\n                accounts: accounts,\n                myContract: instance\n              }, function () {\n                console.log(\"contract setted up!\");\n              }).then(function () {\n                this.showPools();\n              });\n\n              _context.next = 19;\n              break;\n\n            case 15:\n              _context.prev = 15;\n              _context.t0 = _context[\"catch\"](0);\n              // Catch any errors for any of the above operations.\n              alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n              console.log(_context.t0);\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[0, 15]]);\n    }));\n    _this.state = {};\n    _this.captureFile = _this.captureFile.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.showPools = _this.showPools.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.ListoutPool = _this.ListoutPool.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.DisplayNonZeroInList = _this.DisplayNonZeroInList.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"captureFile\",\n    // runExample = async () => {\n    //   const { accounts, contract } = this.state;\n    //   // Stores a given value, 5 by default.\n    //   await contract.set(1721241, { from: accounts[2] });\n    //   // Get the value from the contract to prove it worked.\n    //   const response = await contract.get();\n    //   // Update state with the result.\n    //   this.setState({ storageValue: response.toNumber() });\n    // };\n    //file readers: https://developer.mozilla.org/en-US/docs/Web/API/FileReader\n    value: function captureFile(event) {\n      var _this2 = this;\n\n      console.log(\"capture file\");\n      event.preventDefault();\n      var file = event.target.files[0];\n      var reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = function () {\n        _this2.setState({\n          buffer: Buffer(reader.result)\n        });\n\n        console.log(\"buffer\", _this2.state.buffer);\n      };\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(event) {\n      var _this3 = this;\n\n      console.log(\"submitted!\");\n      event.preventDefault();\n      ipfs.files.add(this.state.buffer, function (err, result) {\n        if (err) {\n          console.log(\"Error!\", err);\n          return;\n        } else {\n          //this.setState({ipfsHash: result[0].hash})\n          console.log(\"ipfsHash returned\", result[0].hash);\n          return _this3.state.myContract.set(result[0].hash, {\n            from: _this3.state.accounts[0]\n          }).then(function (res) {\n            console.log(\"Send\", res);\n            return _this3.state.myContract.get.call({\n              from: _this3.state.accounts[0]\n            }).then(function (ipfsHash) {\n              console.log(\"Fetched\", ipfsHash);\n\n              _this3.setState({\n                ipfsHash: ipfsHash\n              });\n            });\n          });\n        }\n      });\n    }\n  }, {\n    key: \"showPools\",\n    value: function showPools() {\n      //optional [--list] \n      //NOTE: the following 'return' is important, it actually return the promise object\n      //this avoid the issue of unhandled promise.\n      return this.state.myContract.getProviderPool.call().then(function (provPool) {\n        console.log(\"=======================================================\");\n        console.log(\"Active provider pool: Total = \", provPool.length);\n        console.log(provPool);\n        return provPool;\n      }).then(function (provPool) {\n        if (provPool.length > 0) return this.ListoutPool(provPool, 'provider');\n      }).then(function () {\n        return this.state.myContract.getRequestPool.call().then(function (reqPool) {\n          console.log(\"=======================================================\");\n          console.log(\"Pending pool:  Total = \", reqPool.length);\n          console.log(reqPool);\n          return reqPool;\n        });\n      }).then(function (reqPool) {\n        if (reqPool.length > 0) return this.ListoutPool(reqPool, 'request');\n      }).then(function () {\n        return this.state.myContract.getProvidingPool.call().then(function (providingPool) {\n          console.log(\"=======================================================\");\n          console.log(\"Providing pool:  Total = \", providingPool.length);\n          console.log(providingPool);\n          return providingPool;\n        });\n      }).then(function (providingPool) {\n        if (providingPool.length > 0) return this.ListoutPool(providingPool, 'request');\n      }).then(function () {\n        return this.state.myContract.getValidatingPool.call().then(function (valiPool) {\n          console.log(\"=======================================================\");\n          console.log(\"Validating pool:  Total = \", valiPool.length);\n          console.log(valiPool);\n          return valiPool;\n        });\n      }).then(function (valiPool) {\n        if (valiPool.length > 0) return this.ListoutPool(valiPool, 'request');\n      }).catch(function (err) {\n        console.log(\"Error: show pool error! \", err);\n      });\n    }\n  }, {\n    key: \"ListoutPool\",\n    value: function ListoutPool(Pool, type) {\n      //--list [--debug]\n      //console.log(\"List out Pool\")\n      if (type === 'provider') {\n        return this.state.myContract.methods.listProviders(Pool).call().then(function (proList) {\n          console.log(\"-----------------------------------------------------\");\n          this.DisplayNonZeroInList(proList, 'provider');\n        });\n      } else if (type === 'request') {\n        return this.state.myContract.methods.listRequests(Pool).call().then(function (pendList) {\n          console.log(\"-----------------------------------------------------\");\n          this.DisplayNonZeroInList(pendList, 'request');\n        });\n      } else throw new Text(\"Not supported type!\");\n    }\n  }, {\n    key: \"DisplayNonZeroInList\",\n    value: function DisplayNonZeroInList(List, type) {\n      if (type === 'request') for (var i = 0; i < List.length; i++) {\n        if (List[i]['addr'] !== 0) {\n          if (this.state.debug) {\n            console.log(List[i]);\n            console.log(\"-----------------------------------------------------\");\n          } else {\n            //simple print:\n            console.log(\"reqID = \", List[i]['reqID']);\n            console.log(\"addr = \", List[i]['addr']);\n            console.log(\"provider = \", List[i]['provider']);\n            console.log(\"status = \", List[i]['status']);\n            console.log(\"-----------------------------------------------------\");\n          }\n        }\n      } else if (type === 'provider') for (var j = 0; j < List.length; j++) {\n        if (List[j]['addr'] !== 0) {\n          if (this.state.debug) {\n            console.log(List[j]);\n            console.log(\"-----------------------------------------------------\");\n          } else {\n            console.log(\"provD = \", List[j]['provID']);\n            console.log(\"addr = \", List[j]['addr']);\n            console.log(\"available = \", List[j]['available']);\n            console.log(\"-----------------------------------------------------\");\n          }\n        }\n      } else throw new Text('Not supported type for display');\n    } //components of react: https://reactjs.org/docs/forms.html\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.state.web3) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        }, \"Loading Web3, accounts, and contract...\");\n      }\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, \"Your Mode: User\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, \"You can change mode later.\"), React.createElement(\"img\", {\n        src: \"https://ipfs.infura.io/ipfs/\".concat(this.state.ipfsHash),\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, \"Upload Task Script\"), React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.captureFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Click\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, \"Your account: \", this.state.accounts[0]), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, this.showPools()));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/taurus/blockchain/gitLab/bcai_v2.0/client/src/App.js"],"names":["React","Component","TaskContract","getWeb3","truffleContract","ipfs","App","props","state","web3","accounts","myContract","debug","componentWillMount","eth","getAccounts","Contract","setProvider","currentProvider","deployed","instance","setState","console","log","then","showPools","alert","captureFile","bind","onSubmit","ListoutPool","DisplayNonZeroInList","event","preventDefault","file","target","files","reader","window","FileReader","readAsArrayBuffer","onloadend","buffer","Buffer","result","add","err","hash","set","from","res","get","call","ipfsHash","getProviderPool","provPool","length","getRequestPool","reqPool","getProvidingPool","providingPool","getValidatingPool","valiPool","catch","Pool","type","methods","listProviders","proList","listRequests","pendList","Text","List","i","j"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport TaskContract from \"./contracts/TaskContract.json\";\nimport getWeb3 from \"./utils/getWeb3\";\nimport truffleContract from \"truffle-contract\";\nimport ipfs from './ipfs';\n\nimport \"./App.css\";\n\nclass App extends Component {\n  state = { \n    web3: null, \n    accounts: null, \n    myContract: null ,\n    debug: false};\n\n\n  constructor(props){\n    super(props)\n    this.state = {};\n    this.captureFile = this.captureFile.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.showPools = this.showPools.bind(this);\n    this.ListoutPool = this.ListoutPool.bind(this);\n    this.DisplayNonZeroInList = this.DisplayNonZeroInList.bind(this);\n    \n  }\n\n\n  componentWillMount = async () => {\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n      //console.log(web3);\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n      //console.log(accounts);\n      // Get the contract instance.\n      const Contract = truffleContract(TaskContract);\n      Contract.setProvider(web3.currentProvider);\n      const instance = await Contract.deployed();\n      //console.log(instance);\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n      this.setState({ web3, accounts, myContract: instance }, function(){\n        console.log(\"contract setted up!\");\n      }).then(function(){\n        this.showPools();\n      });\n    }\n    catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`\n      );\n      console.log(error);\n    }\n  };\n\n  // runExample = async () => {\n  //   const { accounts, contract } = this.state;\n\n  //   // Stores a given value, 5 by default.\n  //   await contract.set(1721241, { from: accounts[2] });\n\n  //   // Get the value from the contract to prove it worked.\n  //   const response = await contract.get();\n\n  //   // Update state with the result.\n  //   this.setState({ storageValue: response.toNumber() });\n  // };\n\n  //file readers: https://developer.mozilla.org/en-US/docs/Web/API/FileReader\n\n\n  captureFile(event){\n    console.log(\"capture file\");\n    event.preventDefault()\n    const file = event.target.files[0]\n    const reader = new window.FileReader()\n    reader.readAsArrayBuffer(file)\n    reader.onloadend = () =>{\n      this.setState({buffer: Buffer(reader.result)})\n      console.log(\"buffer\", this.state.buffer);\n    }\n  }\n\n  onSubmit(event){\n    console.log(\"submitted!\")\n    event.preventDefault();\n    ipfs.files.add(this.state.buffer, (err, result)=>{\n      if(err){\n        console.log(\"Error!\", err);\n        return\n      }\n      else{\n        \n        //this.setState({ipfsHash: result[0].hash})\n        console.log(\"ipfsHash returned\", result[0].hash)\n        return this.state.myContract.set(result[0].hash, {from: this.state.accounts[0]}).then((res)=>{\n          console.log(\"Send\", res);\n          return this.state.myContract.get.call({from: this.state.accounts[0]}).then((ipfsHash)=>{\n            console.log(\"Fetched\", ipfsHash);\n            this.setState({ipfsHash})\n            \n          })\n        })\n      }\n    })\n    \n  }  \n\n  showPools(){\t\t//optional [--list] \n    //NOTE: the following 'return' is important, it actually return the promise object\n    //this avoid the issue of unhandled promise.\n    return this.state.myContract.getProviderPool.call().then(function(provPool){\n      console.log(\"=======================================================\");\n      console.log(\"Active provider pool: Total = \", provPool.length);\n      console.log(provPool);\n      return provPool;\n    }).then(function(provPool){\n      if(provPool.length >0) return this.ListoutPool(provPool,'provider');\n    }).then(function(){\n      return this.state.myContract.getRequestPool.call().then(function(reqPool){\n        console.log(\"=======================================================\")\n        console.log(\"Pending pool:  Total = \", reqPool.length);\n        console.log(reqPool);\n        return reqPool;\n      })\n    }).then(function(reqPool){\n      if(reqPool.length>0) return this.ListoutPool(reqPool, 'request');\n    }).then(function(){\n      return this.state.myContract.getProvidingPool.call().then(function(providingPool){\n        console.log(\"=======================================================\")\n        console.log(\"Providing pool:  Total = \", providingPool.length);\n        console.log(providingPool);\n        return providingPool;\n      })\n    }).then(function(providingPool){\n      if(providingPool.length>0) return this.ListoutPool(providingPool, 'request');\n    }).then(function(){\n      return this.state.myContract.getValidatingPool.call().then(function(valiPool){\n        console.log(\"=======================================================\")\n        console.log(\"Validating pool:  Total = \", valiPool.length);\n        console.log(valiPool);\n        return valiPool;\n        })\n    }).then(function(valiPool){\n      if(valiPool.length>0) return this.ListoutPool(valiPool, 'request');\n    }).catch(function(err){\n      console.log(\"Error: show pool error! \", err);\n    })\n  }\n\n  ListoutPool(Pool,type){\t\t//--list [--debug]\n    //console.log(\"List out Pool\")\n    if (type === 'provider'){\n      return this.state.myContract.methods.listProviders(Pool).call()\n      .then(function(proList){\n        console.log(\"-----------------------------------------------------\")\n        this.DisplayNonZeroInList(proList,'provider');\n      })\n    }\n    else if (type === 'request'){\n      return this.state.myContract.methods.listRequests(Pool).call()\n      .then(function(pendList){\n        console.log(\"-----------------------------------------------------\")\n        this.DisplayNonZeroInList(pendList,'request');\n      })\n    }\n    else throw new Text(\"Not supported type!\")\n  }\n\n  DisplayNonZeroInList(List, type){\n    if(type === 'request')\n      for(var i = 0;i < List.length;i++){\n        if(List[i]['addr'] !== 0){\n          if(this.state.debug){\n            console.log(List[i]);\n            console.log(\"-----------------------------------------------------\")\n          } else {\n            //simple print:\n            console.log(\"reqID = \", List[i]['reqID']);\n            console.log(\"addr = \", List[i]['addr']);\n            console.log(\"provider = \", List[i]['provider']);\n            console.log(\"status = \",  List[i]['status']);\n            console.log(\"-----------------------------------------------------\")\t\t\t\t\t\t\t\n          }\n        }\n      }\n    else if (type === 'provider')\n      for (var j = 0;j < List.length ;j++){\n        if(List[j]['addr'] !== 0){\n          if(this.state.debug){\n            console.log(List[j]);\n            console.log(\"-----------------------------------------------------\")\n          } else{\n            console.log(\"provD = \", List[j]['provID']);\n            console.log(\"addr = \", List[j]['addr']);\n            console.log(\"available = \", List[j]['available']);\n            console.log(\"-----------------------------------------------------\")\n          }\n        }\n      }\n    else throw new Text('Not supported type for display')\t\n  }\n\n  //components of react: https://reactjs.org/docs/forms.html\n\n  render() {\n    if (!this.state.web3) {\n      return <div>Loading Web3, accounts, and contract...</div>;\n    }\n    return (\n      <div className=\"App\">\n        <h1>Your Mode: User</h1>\n        <p>You can change mode later.</p>\n        <img src={`https://ipfs.infura.io/ipfs/${this.state.ipfsHash}`} alt=\"\" />\n        <h2>Upload Task Script</h2>\n        <form  onSubmit = {this.onSubmit}>\n          <input type = 'file' onChange = {this.captureFile}></input>\n          <input type = 'submit' value = \"Click\"></input>\n        </form>\n        \n        <p>\n          Your account: {this.state.accounts[0]}\n        </p>\n        <div>\n          {this.showPools()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}